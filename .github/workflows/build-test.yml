name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macOS-latest
          compiler: gcc
          compiler_version: 11
          BUILD_FLAGS: "-DSTIR_OPENMP=ON"
          BUILD_TYPE: "Release"

      # let's run all of them, as opposed to aborting when one fails
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: set_compiler_variables
      shell: bash
      run: |
          set -ex
          if test 'XX${{ matrix.compiler }}' = 'XXclang'; then
            CC="clang"
            CXX="clang++"
          elif test 'XX${{ matrix.compiler }}' = 'XXgcc'; then
            CC="gcc"
            CXX="g++"
          fi
          if test 'XX${{ matrix.compiler_version }}' != 'XX'; then
            CC=${CC}-${{ matrix.compiler_version }}
            CXX=${CXX}-${{ matrix.compiler_version }}            
          fi

          export CC CXX
          # make available to jobs below
          echo CC="$CC" >> $GITHUB_ENV
          echo CXX="$CXX" >> $GITHUB_ENV

    - name: install_dependencies
      shell: bash
      run: |
          set -ex
          case ${{matrix.os}} in
            (ubuntu*)
              # install compiler
              if test 'XX${{ matrix.compiler }}' = 'XXclang'; then
                  sudo apt install $CC # package is called clang
              else
                  sudo apt install $CXX
              fi
              # other dependencies
              sudo apt install libboost-dev libhdf5-serial-dev swig python3-dev nlohmann-json3-dev
              PYTHON_EXECUTABLE=$(which python3)
              ;;
            (macOS*)
              brew install python 
              PYTHON_EXECUTABLE=$(which python3)
              ;;
            (windows*)
              # this compiles the whole thing so takes ages
              vcpkg install boost-core hdf5 nlohmann-json
              # swig is preinstalled and is currently not in vcpcg
              vcpkg list
              PYTHON_EXECUTABLE=$(which python3)
              ;;
          esac
          echo PYTHON_EXECUTABLE="$PYTHON_EXECUTABLE" >> $GITHUB_ENV
          #${PYTHON_EXECUTABLE} -m pip install -U pip
          ${PYTHON_EXECUTABLE} -m pip install pytest numpy

 
    - name: Python
      shell: bash
      run: |
          set -ex
          # Run Python tests, making sure we're using the correct Python interpreter
          #export PYTHON_EXECUTABLE=$(cmake -LA -N ${GITHUB_WORKSPACE}/build |awk -F= '/PYTHON_EXECUTABLE/ {print $2}')
          echo Using Python executable "$PYTHON_EXECUTABLE"
          #export PYTHONPATH=${CMAKE_INSTALL_PREFIX}/python
          ${PYTHON_EXECUTABLE} -vc "import numpy; print(numpy.pi)"
